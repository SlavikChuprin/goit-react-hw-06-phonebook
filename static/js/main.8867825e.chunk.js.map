{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","redux/contacts/actions.js","redux/contacts/types.js","redux/contacts/selectors.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/contacts/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","Filter","value","onChange","dispatch","useDispatch","useSelector","length","className","s","filterWrapper","type","event","target","filterInput","prototype","PropTypes","string","func","isRequired","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","reset","preventDefault","form","input","pattern","title","required","btn","ContactListItem","contact","onDeleteContact","contactItem","btnDel","onClick","shape","ContactList","visibleContacts","onDelete","contactList","map","arrayOf","App","createReducer","find","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blscklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8867825e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__C3GK3\",\"filterInput\":\"Filter_filterInput__DfNjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3jfq5\",\"btnDel\":\"ContactListItem_btnDel__HLD-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__Hjcxn\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\r\n  payload: { id: uuidv4(), name, number },\r\n}));\r\n\r\nexport const deleteContact = createAction(DELETE_CONTACT);\r\n\r\nexport const filterContact = createAction(FILTER_CONTACT);\r\n","export const ADD_CONTACT = 'contacts/add';\r\nexport const DELETE_CONTACT = 'contacts/delete';\r\nexport const FILTER_CONTACT = 'contacts/filter';\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../redux/contacts/actions';\r\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n  const contacts = useSelector(getContacts);\r\n  if (!contacts.length)\r\n    return <p>Your phonebook is empty. Please add contact.</p>;\r\n\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={event => dispatch(filterContact(event.target.value))}\r\n          className={s.filterInput}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.prototype = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/actions';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(addContact(name, number));\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.contactItem}>\r\n      {contact.name}: {contact.number}\r\n      <button\r\n        type=\"button\"\r\n        className={s.btnDel}\r\n        onClick={() => onDeleteContact(contact.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.prototype = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ContactListItem from '../ContactListItem';\r\nimport s from './ContactList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/actions';\r\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const visibleContacts = useSelector(getVisibleContacts);\r\n  const onDelete = id => dispatch(deleteContact(id));\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {visibleContacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onDeleteContact={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.prototype = {\r\n  visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","// import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Filter from './components/Filter';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import useLocalStorage from './hooks/useLocalStorage';\r\n\r\nfunction App() {\r\n  // const [contacts, setContacts] = useLocalStorage('contacts', [\r\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  // ]);\r\n\r\n  // const [filter, setFilter] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  // const submitFromForm = data => {\r\n  //   const { name } = data;\r\n  //   const nameAlreadyIs = contacts.find(contact => contact.name === name);\r\n\r\n  //   if (nameAlreadyIs) {\r\n  //     alert(`${name} is already in contacts`);\r\n  //     return;\r\n  //   }\r\n  //   data.id = uuidv4();\r\n  //   setContacts(state => [...state, data]);\r\n  // };\r\n\r\n  // const changeFilter = e => {\r\n  //   setFilter(e.currentTarget.value);\r\n  // };\r\n\r\n  // const getVisibleContacts = () => {\r\n  //   if (filter) {\r\n  //     const normalizedFilter = filter.toLowerCase();\r\n  //     const newContactsArr = contacts.filter(({ name }) =>\r\n  //       name.toLowerCase().includes(normalizedFilter),\r\n  //     );\r\n  //     return newContactsArr;\r\n  //   }\r\n  //   return contacts;\r\n  // };\r\n\r\n  // const deleteContact = id => {\r\n  //   setContacts(contacts.filter(contact => contact.id !== id));\r\n  // };\r\n\r\n  // const onVisibleContacts = getVisibleContacts();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2> Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { addContact, deleteContact, filterContact } from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) =>\r\n    state.find(({ name }) => name === payload.name)\r\n      ? alert(`${payload.name} is already in contacts`)\r\n      : [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blscklist: 'filter',\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__A-bnB\",\"input\":\"ContactForm_input__aaM2X\",\"btn\":\"ContactForm_btn__3qkvH\"};"],"sourceRoot":""}